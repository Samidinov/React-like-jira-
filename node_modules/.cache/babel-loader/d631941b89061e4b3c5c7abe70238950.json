{"ast":null,"code":"var _jsxFileName = \"/home/ds/Desktop/react/todo-list/src/todo/todo-item.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class TodoItem extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.isDone = () => {\n      this.setState(({\n        done\n      }) => ({\n        done: !done\n      }));\n    };\n\n    this.itemModal = props => {\n      return /*#__PURE__*/_jsxDEV(Modal, {\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Modal heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Centered Modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      done: false\n    };\n  }\n\n  render() {\n    const [modalShow, setModalShow] = React.useState(false);\n    let style = this.state.done ? {\n      textDecorationLine: 'line-through'\n    } : {};\n    let {\n      title\n    } = this.props;\n    return (\n      /*#__PURE__*/\n      // <div style ={style} className=\"alert alert-secondary row\">\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10\",\n          style: style,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            checked: this.state.done,\n            onClick: this.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            onClick: this.setModalShow(true),\n            style: {\n              cursor: \"zoom-in\"\n            },\n            children: title.length > 20 ? title.substr(0, 20) + '...' : title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n          show: modalShow,\n          onHide: () => setModalShow(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) //      <i class=\"text-right fa fa-minus-circle col-2\" onClick={this.isDone}/>\n      // </div>\n\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/ds/Desktop/react/todo-list/src/todo/todo-item.js"],"names":["React","Component","Button","Modal","TodoItem","constructor","props","isDone","setState","done","itemModal","onHide","state","render","modalShow","setModalShow","useState","style","textDecorationLine","title","cursor","length","substr"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,YAA5B;;;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC5CI,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,UAAMA,MAAN;;AADe,SAOnBC,MAPmB,GAOV,MAAM;AACX,WAAKC,QAAL,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,MAAW;AACrBA,QAAAA,IAAI,EAAC,CAACA;AADe,OAAX,CAAd;AAGH,KAXkB;;AAAA,SAYnBC,SAZmB,GAYNJ,KAAD,IAAW;AACnB,0BACI,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,IADP;AAEE,2BAAgB,+BAFlB;AAGE,QAAA,QAAQ,MAHV;AAAA,gCAKE,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACE,QAAC,KAAD,CAAO,KAAP;AAAa,YAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAUE,QAAC,KAAD,CAAO,IAAP;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAkBE,QAAC,KAAD,CAAO,MAAP;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEA,KAAK,CAACK,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAwBH,KArCkB;;AAEf,SAAKC,KAAL,GAAa;AACTH,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAiCDI,EAAAA,MAAM,GAAG;AACL,UAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,KAAK,CAACgB,QAAN,CAAe,KAAf,CAAlC;AACA,QAAIC,KAAK,GAAG,KAAKL,KAAL,CAAWH,IAAX,GAAgB;AAACS,MAAAA,kBAAkB,EAAE;AAArB,KAAhB,GAAqD,EAAjE;AACA,QAAI;AAACC,MAAAA;AAAD,QAAU,KAAKb,KAAnB;AACA;AAAA;AACI;AACK;AAAA,gCACG;AAAK,UAAA,SAAS,EAAC,QAAf;AAAyB,UAAA,KAAK,EAAGW,KAAjC;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,SAAS,EAAC,kBAAjC;AAAoD,YAAA,OAAO,EAAE,KAAKL,KAAL,CAAWH,IAAxE;AAA8E,YAAA,OAAO,EAAE,KAAKF;AAA5F;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,OAAO,EAAE,KAAKQ,YAAL,CAAkB,IAAlB,CAAhB;AAAyC,YAAA,KAAK,EAAE;AAACK,cAAAA,MAAM,EAAC;AAAR,aAAhD;AAAA,sBACKD,KAAK,CAACE,MAAN,GAAe,EAAf,GAAoBF,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgB,EAAhB,IAAoB,KAAxC,GAAgDH;AADrD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAOG,QAAC,yBAAD;AACA,UAAA,IAAI,EAAEL,SADN;AAEA,UAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD;AAF1B;AAAA;AAAA;AAAA;AAAA,gBAPH;AAAA,sBAFT,CAcI;AACA;;AAfJ;AAiBH;;AA5D2C","sourcesContent":["import React,{Component} from 'react'\nimport {Button, Modal} from 'reactstrap'\n\nexport default class TodoItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            done: false\n        }\n    }\n    \n    isDone = () => {\n        this.setState(({done})=>({\n            done:!done\n        }))  \n    }\n    itemModal = (props) => {\n        return (\n            <Modal\n              size=\"lg\"\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              centered\n            >\n              <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  Modal heading\n                </Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <h4>Centered Modal</h4>\n                <p>\n                  Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n                  dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\n                  consectetur ac, vestibulum at eros.\n                </p>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n              </Modal.Footer>\n            </Modal>\n          );\n    }\n    render() {\n        const [modalShow, setModalShow] = React.useState(false);\n        let style = this.state.done?{textDecorationLine: 'line-through'}:{};\n        let {title} = this.props;\n        return(\n            // <div style ={style} className=\"alert alert-secondary row\">\n                 <>\n                    <div className=\"col-10\"  style ={style}>\n                        <input type=\"checkbox\" className=\"form-check-input\" checked={this.state.done} onClick={this.isDone}/>\n                        <small onClick={this.setModalShow(true)} style={{cursor:\"zoom-in\"}}>\n                            {title.length > 20 ? title.substr(0, 20)+'...' : title}\n                        </small>\n                    </div>\n                    <MyVerticallyCenteredModal\n                    show={modalShow}\n                    onHide={() => setModalShow(false)}\n                    />\n                 </>\n            //      <i class=\"text-right fa fa-minus-circle col-2\" onClick={this.isDone}/>\n            // </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}