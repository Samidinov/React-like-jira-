{"ast":null,"code":"var _jsxFileName = \"/home/ds/Desktop/react/todo-list/src/todo/todo-item.js\";\nimport React, { Component } from 'react';\nimport { ItemModal } from './itemModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class TodoItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = () => {\n      this.setState(({\n        modalShow\n      }) => ({\n        modalShow: !modalShow\n      }));\n    };\n\n    this.isDone = () => {\n      this.setState(({\n        done\n      }) => ({\n        done: !done\n      }));\n    };\n\n    this.onChangeDescription = description => {\n      this.setState({\n        description: description\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      description,\n      done: false,\n      modalShow: false\n    };\n  }\n\n  render() {\n    const {\n      modalShow,\n      done\n    } = this.state;\n    let style = done ? {\n      textDecorationLine: 'line-through'\n    } : {};\n    let {\n      title\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10\",\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(ItemModal, {\n          show: modalShow,\n          handleClose: this.toggleModal,\n          description: this.state.description,\n          onChangeDescription: desc => this.onChangeDescription(desc),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          checked: this.state.done,\n          onChange: this.isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          variant: \"primary\",\n          style: {\n            cursor: \"zoom-in\"\n          },\n          onClick: this.toggleModal,\n          children: title.length > 20 ? title.substr(0, 20) + '...' : title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/home/ds/Desktop/react/todo-list/src/todo/todo-item.js"],"names":["React","Component","ItemModal","TodoItem","constructor","props","toggleModal","setState","modalShow","isDone","done","onChangeDescription","description","console","log","state","render","style","textDecorationLine","title","desc","cursor","length","substr"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,aAAxB;;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,WARmB,GAQL,MAAM;AAChB,WAAKC,QAAL,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,MAAkB;AAC5BA,QAAAA,SAAS,EAAC,CAACA;AADiB,OAAlB,CAAd;AAGH,KAZkB;;AAAA,SAanBC,MAbmB,GAaV,MAAM;AACX,WAAKF,QAAL,CAAc,CAAC;AAACG,QAAAA;AAAD,OAAD,MAAW;AACrBA,QAAAA,IAAI,EAAC,CAACA;AADe,OAAX,CAAd;AAGH,KAjBkB;;AAAA,SAkBnBC,mBAlBmB,GAkBIC,WAAD,IAAiB;AACnC,WAAKL,QAAL,CAAc;AAACK,QAAAA,WAAW,EAACA;AAAb,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACH,KArBkB;;AAEf,SAAKA,KAAL,GAAa;AACTH,MAAAA,WADS;AAETF,MAAAA,IAAI,EAAE,KAFG;AAGTF,MAAAA,SAAS,EAAC;AAHD,KAAb;AAKH;;AAgBDQ,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACR,MAAAA,SAAD;AAAYE,MAAAA;AAAZ,QAAoB,KAAKK,KAA/B;AACA,QAAIE,KAAK,GAAGP,IAAI,GAAG;AAACQ,MAAAA,kBAAkB,EAAE;AAArB,KAAH,GAA0C,EAA1D;AACA,QAAI;AAACC,MAAAA;AAAD,QAAU,KAAKd,KAAnB;AACA,wBACI;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAyB,QAAA,KAAK,EAAGY,KAAjC;AAAA,gCACA,QAAC,SAAD;AACI,UAAA,IAAI,EAAET,SADV;AAEI,UAAA,WAAW,EAAE,KAAKF,WAFtB;AAGI,UAAA,WAAW,EAAE,KAAKS,KAAL,CAAWH,WAH5B;AAII,UAAA,mBAAmB,EAAIQ,IAAD,IAAU,KAAKT,mBAAL,CAAyBS,IAAzB,CAJpC;AAAA,iCAKI;AAAA,4BAAKD,KAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAQI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAC,kBAAjC;AAAoD,UAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWL,IAAxE;AAA8E,UAAA,QAAQ,EAAE,KAAKD;AAA7F;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AACI,UAAA,OAAO,EAAC,SADZ;AAEI,UAAA,KAAK,EAAE;AAACY,YAAAA,MAAM,EAAC;AAAR,WAFX;AAGI,UAAA,OAAO,EAAE,KAAKf,WAHlB;AAAA,oBAISa,KAAK,CAACG,MAAN,GAAe,EAAf,GAAoBH,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgB,EAAhB,IAAoB,KAAxC,GAAgDJ;AAJzD;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,qBADJ;AAqBH;;AAlD2C","sourcesContent":["import React,{Component} from 'react';\nimport {ItemModal} from './itemModal'\n\nexport default class TodoItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            description,\n            done: false,\n            modalShow:false\n        }\n    }\n    toggleModal = () => {\n        this.setState(({modalShow}) => ({\n            modalShow:!modalShow\n        }))\n    }\n    isDone = () => {\n        this.setState(({done})=>({\n            done:!done\n        }))  \n    }\n    onChangeDescription = (description) => {\n        this.setState({description:description})\n        console.log(this.state);\n    }\n\n    render() {\n\n        const {modalShow, done} = this.state;   \n        let style = done ? {textDecorationLine: 'line-through'} : {};\n        let {title} = this.props;\n        return(\n            <>\n                \n                <div className=\"col-10\"  style ={style}>\n                <ItemModal\n                    show={modalShow}\n                    handleClose={this.toggleModal}\n                    description={this.state.description}\n                    onChangeDescription= {(desc) => this.onChangeDescription(desc)}>\n                    <p> {title} </p>\n                </ItemModal>\n                    <input type=\"checkbox\" className=\"form-check-input\" checked={this.state.done} onChange={this.isDone}/>\n                    <small  \n                        variant=\"primary\"\n                        style={{cursor:\"zoom-in\"}}\n                        onClick={this.toggleModal}>\n                            {title.length > 20 ? title.substr(0, 20)+'...' : title}\n                    </small>\n                </div>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}