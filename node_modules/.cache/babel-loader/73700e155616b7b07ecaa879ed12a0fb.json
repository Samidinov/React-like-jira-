{"ast":null,"code":"var _jsxFileName = \"/home/ds/Desktop/react/todo-list/src/App.js\";\nimport React, { Component } from 'react';\nimport { ReactSortable } from 'react-sortablejs';\nimport { AutoScroll } from 'sortablejs';\nimport TodoCard from './todo/todo-card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addCard = setTitle => {\n      const newCard = {\n        title: 'New card',\n        id: Date.now(),\n        todoitems: []\n      };\n      this.setState({\n        card: [...this.state.card, newCard]\n      });\n    };\n\n    this.changeTitleOfCard = (index, event) => {\n      const newState = { ...this.state\n      };\n      newState.card[index].title = event.target.value;\n      this.setState(newState);\n    };\n\n    this.deleteCard = index => {\n      this.setState(this.state.card.splice(index, 1));\n    };\n\n    this.updateCards = card => {\n      this.setState({\n        card\n      });\n    };\n\n    this.addTodoItem = (title, index) => {\n      // console.log(...this.state.card[index].todoitems);\n      if (title.trim()) {\n        const newTodo = {\n          title: title,\n          done: false,\n          id: Date.now(),\n          chosen: false,\n          selected: false\n        };\n        const card = this.copyTodoCard();\n        card[index].todoitems.push(newTodo);\n        this.setState({\n          card\n        });\n        console.log(this.state);\n      }\n    };\n\n    this.copyTodoCard = () => {\n      return this.state.card;\n    };\n\n    this.updateTodosHandle = (todoitems, index) => {\n      const card = this.copyTodoCard();\n      card[index].todoitems.splice(0, card[index].todoitems.length, ...todoitems);\n      this.setState(card => {\n        return card;\n      });\n    };\n\n    this.deleteTodosItem = (itemIndex, index) => {\n      this.setState(this.state.card[index].todoitems.splice(itemIndex, 1));\n    };\n\n    this.state = {\n      card: [{\n        title: 'Read book',\n        id: Date.now(),\n        todoitems: [{\n          title: 'Квантовый воин'\n        }, {\n          title: 'Будь лучшей версией себя!'\n        }, {\n          title: 'Бакыттын сырын ачтым'\n        }]\n      }, {\n        title: 'Products',\n        id: Date.now(),\n        todoitems: []\n      }]\n    };\n  } //card functions\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ReactSortable, {\n        list: this.state.card,\n        setList: this.updateCards,\n        className: \"d-block-flex\",\n        style: {\n          overflow: \"auto\",\n          whiteSpace: \"nowrap\",\n          height: \"100vh\"\n        },\n        children: this.state.card.map((item, index) => {\n          return (\n            /*#__PURE__*/\n            // <ReactSortable list={this.state.card} setList={this.updateCards}>{\n            _jsxDEV(TodoCard, {\n              cardTitle: item.title,\n              changeTitleOfCard: event => this.changeTitleOfCard(index, event),\n              deleteCard: () => this.deleteCard(index),\n              addTodoItem: title => this.addTodoItem(title, index),\n              todoitems: this.state.card[index].todoitems,\n              updateTodosHandle: todoitems => this.updateTodosHandle(todoitems, index),\n              deleteTodosItem: itemIndex => this.deleteTodosItem(itemIndex, index)\n            }, this.state.card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this) // }</ReactSortable>\n\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"btn__add-card fa fa-plus-circle\",\n        onClick: this.addCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ds/Desktop/react/todo-list/src/App.js"],"names":["React","Component","ReactSortable","AutoScroll","TodoCard","App","constructor","props","addCard","setTitle","newCard","title","id","Date","now","todoitems","setState","card","state","changeTitleOfCard","index","event","newState","target","value","deleteCard","splice","updateCards","addTodoItem","trim","newTodo","done","chosen","selected","copyTodoCard","push","console","log","updateTodosHandle","length","deleteTodosItem","itemIndex","render","overflow","whiteSpace","height","map","item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { ReactSortable } from 'react-sortablejs';\nimport { AutoScroll } from 'sortablejs';\nimport TodoCard from './todo/todo-card'\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      card:\n        [\n          {\n            title:'Read book',\n            id:Date.now(),\n            todoitems: [\n              {title:'Квантовый воин'},\n              {title:'Будь лучшей версией себя!'},\n              {title:'Бакыттын сырын ачтым'},\n            ]\n          },\n          {\n            title:'Products',\n            id:Date.now(),\n            todoitems: []\n          }\n        ]\n    };\n  }\n\n  //card functions\n\n  addCard = (setTitle) => {\n    const newCard = { title:'New card', id:Date.now(), todoitems:[]}\n    this.setState({card : [...this.state.card,newCard]})\n  }\n\n  changeTitleOfCard = (index, event) => {\n    const newState = {...this.state};\n    newState.card[index].title= event.target.value;\n    this.setState(newState);\n  }\n\n  deleteCard = (index) => {\n    this.setState(this.state.card.splice(index,1))\n  }\n\n  updateCards = (card) => {\n    this.setState({card});\n  }\n\n  //Todo items functions\n\n  addTodoItem = (title, index) => {\n    // console.log(...this.state.card[index].todoitems);\n    if(title.trim()) {\n      const newTodo = {\n        title:title,\n        done:false,\n        id: Date.now(),\n        chosen:false,\n        selected: false\n      };\n\n      const card = this.copyTodoCard();\n      card[index].todoitems.push(newTodo);\n      this.setState({card});\n      console.log(this.state);\n    }\n  }\n\n  copyTodoCard = () => {\n   return this.state.card;\n  }\n\n  updateTodosHandle = (todoitems, index) => {\n    const card = this.copyTodoCard();\n    card[index].todoitems.splice(0, card[index].todoitems.length, ...todoitems);\n    this.setState(card => {\n      return card\n    });\n\n  }\n\n  deleteTodosItem = (itemIndex, index) => {\n    this.setState(this.state.card[index].todoitems.splice(itemIndex,1));\n  }\n\n  render() {\n    return (\n      <>\n        {\n          <ReactSortable list={this.state.card} setList={this.updateCards} className=\"d-block-flex\" style={{overflow: \"auto\", whiteSpace: \"nowrap\", height: \"100vh\"}}>{  \n            this.state.card.map((item, index) => {\n              return (\n                // <ReactSortable list={this.state.card} setList={this.updateCards}>{\n                  <TodoCard \n                    cardTitle={item.title} \n                    changeTitleOfCard={(event)=>this.changeTitleOfCard(index, event)} \n                    deleteCard = {()=>this.deleteCard(index)} \n                    key={this.state.card.id}\n                    addTodoItem={(title)=>this.addTodoItem(title,index)} \n                    todoitems = {this.state.card[index].todoitems} \n                    updateTodosHandle = {(todoitems) => this.updateTodosHandle(todoitems, index)} \n                    deleteTodosItem={(itemIndex)=>this.deleteTodosItem(itemIndex, index)}\n                    >\n                      {/*  */}\n                    </TodoCard>\n                // }</ReactSortable>\n              )\n            })\n          }</ReactSortable>\n        }\n        <i className=\"btn__add-card fa fa-plus-circle\" onClick={this.addCard}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}