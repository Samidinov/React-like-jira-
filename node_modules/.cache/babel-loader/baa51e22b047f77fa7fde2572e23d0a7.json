{"ast":null,"code":"var _jsxFileName = \"/home/ds/Desktop/react/todo-list/src/todo/todo-item.js\";\nimport React, { Component, useState } from 'react';\nimport itemModal from './itemModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class TodoItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setModalShow = () => {};\n\n    this.isDone = () => {\n      this.setState(({\n        done\n      }) => ({\n        done: !done\n      }));\n    };\n\n    this.state = {\n      done: false,\n      modalShow: false\n    };\n  }\n\n  render() {\n    const {\n      modalShow\n    } = this.state;\n    let style = this.state.done ? {\n      textDecorationLine: 'line-through'\n    } : {};\n    let {\n      title\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10\",\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          checked: this.state.done,\n          onClick: this.isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          onClick: this.setModalShow(true),\n          style: {\n            cursor: \"zoom-in\"\n          },\n          children: title.length > 20 ? title.substr(0, 20) + '...' : title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"itemModal\", {\n        show: modalShow // onHide={() => this.setModalShow}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/ds/Desktop/react/todo-list/src/todo/todo-item.js"],"names":["React","Component","useState","itemModal","TodoItem","constructor","props","setModalShow","isDone","setState","done","state","modalShow","render","style","textDecorationLine","title","cursor","length","substr"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC5CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,YAPmB,GAOJ,MAAM,CAEpB,CATkB;;AAAA,SAUnBC,MAVmB,GAUV,MAAM;AACX,WAAKC,QAAL,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,MAAW;AACrBA,QAAAA,IAAI,EAAC,CAACA;AADe,OAAX,CAAd;AAGH,KAdkB;;AAEf,SAAKC,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE,KADG;AAETE,MAAAA,SAAS,EAAC;AAFD,KAAb;AAIH;;AAUDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACD,MAAAA;AAAD,QAAc,KAAKD,KAAzB;AACA,QAAIG,KAAK,GAAG,KAAKH,KAAL,CAAWD,IAAX,GAAgB;AAACK,MAAAA,kBAAkB,EAAE;AAArB,KAAhB,GAAqD,EAAjE;AACA,QAAI;AAACC,MAAAA;AAAD,QAAU,KAAKV,KAAnB;AACA,wBACS;AAAA,8BACG;AAAK,QAAA,SAAS,EAAC,QAAf;AAAyB,QAAA,KAAK,EAAGQ,KAAjC;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAC,kBAAjC;AAAoD,UAAA,OAAO,EAAE,KAAKH,KAAL,CAAWD,IAAxE;AAA8E,UAAA,OAAO,EAAE,KAAKF;AAA5F;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,OAAO,EAAE,KAAKD,YAAL,CAAkB,IAAlB,CAAhB;AAAyC,UAAA,KAAK,EAAE;AAACU,YAAAA,MAAM,EAAC;AAAR,WAAhD;AAAA,oBACKD,KAAK,CAACE,MAAN,GAAe,EAAf,GAAoBF,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgB,EAAhB,IAAoB,KAAxC,GAAgDH;AADrD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAOG;AACA,QAAA,IAAI,EAAEJ,SADN,CAEA;;AAFA;AAAA;AAAA;AAAA;AAAA,cAPH;AAAA,oBADT;AAcH;;AAnC2C","sourcesContent":["import React,{Component, useState} from 'react'\nimport itemModal from './itemModal'\n\nexport default class TodoItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            done: false,\n            modalShow:false\n        }\n    }\n    setModalShow = () => {\n        \n    }\n    isDone = () => {\n        this.setState(({done})=>({\n            done:!done\n        }))  \n    }\n    \n    render() {\n        const {modalShow} = this.state;\n        let style = this.state.done?{textDecorationLine: 'line-through'}:{};\n        let {title} = this.props;\n        return(\n                 <>\n                    <div className=\"col-10\"  style ={style}>\n                        <input type=\"checkbox\" className=\"form-check-input\" checked={this.state.done} onClick={this.isDone}/>\n                        <small onClick={this.setModalShow(true)} style={{cursor:\"zoom-in\"}}>\n                            {title.length > 20 ? title.substr(0, 20)+'...' : title}\n                        </small>\n                    </div>\n                    <itemModal\n                    show={modalShow}\n                    // onHide={() => this.setModalShow}\n                    />\n                 </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}