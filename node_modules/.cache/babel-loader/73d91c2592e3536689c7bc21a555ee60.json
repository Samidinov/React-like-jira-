{"ast":null,"code":"var _jsxFileName = \"/home/ds/Desktop/react/todo-list/src/todo/todo-card.js\";\nimport React, { Component } from 'react';\nimport TodoList from './todo-list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TodoCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getList = () => {\n      for (let [key, value] of Object.entries(this.state)) {\n        if (key === this.props.cardId) {\n          console.log('Diiiiiyaz');\n        }\n      }\n    };\n\n    this.updateTodo = readBook => {\n      this.setState({\n        readBook\n      });\n    };\n\n    this.state = {\n      todoitems: []\n    };\n    this.addTodoItem = this.addTodoItem.bind(this);\n  }\n\n  addTodoItem(title) {\n    const newTodo = {\n      title: title,\n      done: false,\n      id: Date.now(),\n      chosen: false,\n      selected: false\n    };\n    console.log(...this.state.readBook, newTodo);\n    this.setState({\n      readBook: [...this.state.readBook, newTodo]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info mr-3 pr-3 pl-3\",\n      children: /*#__PURE__*/_jsxDEV(TodoList, {\n        title: this.props.cardTitle,\n        addTodoItem: this.addTodoItem,\n        todos: this.state.readBook,\n        updateTodosHandle: this.updateTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ds/Desktop/react/todo-list/src/todo/todo-card.js"],"names":["React","Component","TodoList","TodoCard","constructor","props","getList","key","value","Object","entries","state","cardId","console","log","updateTodo","readBook","setState","todoitems","addTodoItem","bind","title","newTodo","done","id","Date","now","chosen","selected","render","cardTitle"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,OATmB,GAST,MAAM;AACd,WAAI,IAAI,CAACC,GAAD,EAAOC,KAAP,CAAR,IAAyBC,MAAM,CAACC,OAAP,CAAe,KAAKC,KAApB,CAAzB,EAAqD;AACnD,YAAGJ,GAAG,KAAK,KAAKF,KAAL,CAAWO,MAAtB,EAA8B;AAC5BC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF;AACF,KAfkB;;AAAA,SA6BnBC,UA7BmB,GA6BLC,QAAD,IAAc;AACzB,WAAKC,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd;AACD,KA/BkB;;AAEf,SAAKL,KAAL,GAAa;AACTO,MAAAA,SAAS,EAAE;AADF,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAUDD,EAAAA,WAAW,CAACE,KAAD,EAAQ;AACjB,UAAMC,OAAO,GAAG;AACdD,MAAAA,KAAK,EAACA,KADQ;AAEdE,MAAAA,IAAI,EAAC,KAFS;AAGdC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAHU;AAIdC,MAAAA,MAAM,EAAC,KAJO;AAKdC,MAAAA,QAAQ,EAAE;AALI,KAAhB;AAOAf,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAG,KAAKH,KAAL,CAAWK,QAA1B,EAAmCM,OAAnC;AACA,SAAKL,QAAL,CAAc;AAACD,MAAAA,QAAQ,EAAC,CAAC,GAAG,KAAKL,KAAL,CAAWK,QAAf,EAAyBM,OAAzB;AAAV,KAAd;AACD;;AAMDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWyB,SAA5B;AAAuC,QAAA,WAAW,EAAI,KAAKX,WAA3D;AACA,QAAA,KAAK,EAAI,KAAKR,KAAL,CAAWK,QADpB;AAC8B,QAAA,iBAAiB,EAAE,KAAKD;AADtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAzC2C","sourcesContent":["import React,{Component} from 'react'\nimport TodoList from './todo-list'\n\nexport default class TodoCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todoitems: []\n          \n        };\n        this.addTodoItem = this.addTodoItem.bind(this);\n    }\n\n    getList = () => {\n      for(let [key,  value] of Object.entries(this.state)) {\n        if(key === this.props.cardId) {\n          console.log('Diiiiiyaz');\n        }\n      }\n    }\n    \n    addTodoItem(title) {\n      const newTodo = {\n        title:title,\n        done:false,\n        id: Date.now(),\n        chosen:false,\n        selected: false\n      };\n      console.log(...this.state.readBook,newTodo);\n      this.setState({readBook:[...this.state.readBook, newTodo]});\n    }\n\n    updateTodo = (readBook) => {\n      this.setState({readBook});\n    }\n\n    render() {\n        return (\n            <div className=\"alert alert-info mr-3 pr-3 pl-3\">\n                <TodoList title={this.props.cardTitle} addTodoItem = {this.addTodoItem}\n                todos = {this.state.readBook} updateTodosHandle={this.updateTodo}></TodoList>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}