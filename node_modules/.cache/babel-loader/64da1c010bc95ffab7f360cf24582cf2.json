{"ast":null,"code":"var _jsxFileName = \"/home/ds/Desktop/react/todo-list/src/todo/todo-item.js\";\nimport React, { Component, useState } from 'react';\nimport { App } from './itemModal';\nimport { Modal, Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class TodoItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setModalShow = () => {\n      this.setState(({\n        modalShow\n      }) => ({\n        modalShow: !modalShow\n      }));\n      console.log('mooodal');\n    };\n\n    this.isDone = () => {\n      this.setState(({\n        done\n      }) => ({\n        done: !done\n      }));\n    };\n\n    this.state = {\n      done: false,\n      modalShow: false\n    };\n  }\n\n  render() {\n    const {\n      modalShow\n    } = this.state;\n    let style = this.state.done ? {\n      textDecorationLine: 'line-through'\n    } : {};\n    let {\n      title\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10\",\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          checked: this.state.done,\n          onChange: this.isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          variant: \"primary\",\n          style: {\n            cursor: \"zoom-in\"\n          },\n          title: title.length > 20 ? title.substr(0, 20) + '...' : title,\n          onClick: () => this.setModalShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/home/ds/Desktop/react/todo-list/src/todo/todo-item.js"],"names":["React","Component","useState","App","Modal","Button","TodoItem","constructor","props","setModalShow","setState","modalShow","console","log","isDone","done","state","render","style","textDecorationLine","title","cursor","length","substr"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,GAAR,QAAkB,aAAlB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,YAA5B;;;AAGA,eAAe,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC5CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,YAPmB,GAOJ,MAAM;AACjB,WAAKC,QAAL,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,MAAkB;AAC5BA,QAAAA,SAAS,EAAC,CAACA;AADiB,OAAlB,CAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAZkB;;AAAA,SAanBC,MAbmB,GAaV,MAAM;AACX,WAAKJ,QAAL,CAAc,CAAC;AAACK,QAAAA;AAAD,OAAD,MAAW;AACrBA,QAAAA,IAAI,EAAC,CAACA;AADe,OAAX,CAAd;AAGH,KAjBkB;;AAEf,SAAKC,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE,KADG;AAETJ,MAAAA,SAAS,EAAC;AAFD,KAAb;AAIH;;AAaDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAACN,MAAAA;AAAD,QAAc,KAAKK,KAAzB;AACA,QAAIE,KAAK,GAAG,KAAKF,KAAL,CAAWD,IAAX,GAAgB;AAACI,MAAAA,kBAAkB,EAAE;AAArB,KAAhB,GAAqD,EAAjE;AACA,QAAI;AAACC,MAAAA;AAAD,QAAU,KAAKZ,KAAnB;AAEA,wBACS;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,QAAf;AAAyB,QAAA,KAAK,EAAGU,KAAjC;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAC,kBAAjC;AAAoD,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWD,IAAxE;AAA8E,UAAA,QAAQ,EAAE,KAAKD;AAA7F;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,OAAO,EAAC,SADZ;AAEI,UAAA,KAAK,EAAE;AAACO,YAAAA,MAAM,EAAC;AAAR,WAFX;AAGI,UAAA,KAAK,EAAED,KAAK,CAACE,MAAN,GAAe,EAAf,GAAoBF,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgB,EAAhB,IAAoB,KAAxC,GAAgDH,KAH3D;AAII,UAAA,OAAO,EAAE,MAAM,KAAKX;AAJxB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,qBADT;AAcH;;AAvC2C","sourcesContent":["import React,{Component, useState} from 'react';\nimport {App} from './itemModal'\nimport {Modal, Button} from 'reactstrap'\n\n\nexport default class TodoItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            done: false,\n            modalShow:false\n        }\n    }\n    setModalShow = () => {\n        this.setState(({modalShow}) => ({\n            modalShow:!modalShow\n        }))\n        console.log('mooodal');\n    }\n    isDone = () => {\n        this.setState(({done})=>({\n            done:!done\n        }))  \n    }\n    \n    render() {\n        const {modalShow} = this.state;\n        let style = this.state.done?{textDecorationLine: 'line-through'}:{};\n        let {title} = this.props;\n        \n        return(\n                 <>\n                    <div className=\"col-10\"  style ={style}>\n                        <input type=\"checkbox\" className=\"form-check-input\" checked={this.state.done} onChange={this.isDone}/>\n                        <small  \n                            variant=\"primary\"\n                            style={{cursor:\"zoom-in\"}}\n                            title={title.length > 20 ? title.substr(0, 20)+'...' : title}\n                            onClick={() => this.setModalShow}>\n                        </small>\n                    </div>\n                    \n                 </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}