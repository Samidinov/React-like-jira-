{"ast":null,"code":"var _jsxFileName = \"/home/ds/Desktop/react/todo-list/src/App.js\";\nimport React, { Component } from 'react';\nimport { ReactSortable } from 'react-sortablejs';\nimport { AutoScroll } from 'sortablejs';\nimport TodoCard from './todo/todo-card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addCard = setTitle => {\n      const newCard = {\n        title: 'New card',\n        id: Date.now(),\n        index: this.i++,\n        todoitems: []\n      };\n      this.setState({\n        card: [...this.state.card, newCard]\n      });\n    };\n\n    this.changeTitleOfCard = (index, event) => {\n      const newState = { ...this.state\n      };\n      newState.card[index].title = event.target.value;\n      this.setState(newState);\n    };\n\n    this.deleteCard = index => {\n      this.setState(this.state.card.splice(index, 1));\n    };\n\n    this.updateCards = card => {\n      this.setState({\n        card\n      });\n    };\n\n    this.addTodoItem = (title, index) => {\n      // console.log(...this.state.card[index].todoitems);\n      if (title.trim()) {\n        const newTodo = {\n          title: title,\n          done: false,\n          id: Date.now(),\n          chosen: false,\n          selected: false\n        };\n        const card = this.copyTodoCard();\n        card[index].todoitems.push(newTodo);\n        this.setState({\n          card\n        });\n        console.log(this.state);\n      }\n    };\n\n    this.copyTodoCard = () => {\n      return this.state.card;\n    };\n\n    this.updateTodosHandle = (todoitems, index) => {\n      const card = this.copyTodoCard();\n      card[index].todoitems.splice(0, card[index].todoitems.length, ...todoitems);\n      this.setState(card => {\n        return card;\n      });\n    };\n\n    this.deleteTodosItem = (itemIndex, index) => {\n      this.setState(this.state.card[index].todoitems.splice(itemIndex, 1));\n    };\n\n    this.state = {\n      card: [{\n        title: 'Read book',\n        id: Date.now(),\n        todoitems: [{\n          title: 'first'\n        }, {\n          title: 'second'\n        }, {\n          title: 'thirthd'\n        }]\n      }, {\n        title: 'Products',\n        id: Date.now(),\n        todoitems: []\n      }]\n    };\n  } //card functions\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ReactSortable, {\n        list: this.state.card,\n        setList: this.updateCards,\n        className: \"col-12 row\",\n        style: {\n          overflow: auto\n        },\n        children: this.state.card.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(TodoCard, {\n            cardTitle: item.title,\n            changeTitleOfCard: event => this.changeTitleOfCard(index, event),\n            deleteCard: () => this.deleteCard(index),\n            addTodoItem: title => this.addTodoItem(title, index),\n            todoitems: this.state.card[index].todoitems,\n            updateTodosHandle: todoitems => this.updateTodosHandle(todoitems, index),\n            deleteTodosItem: itemIndex => this.deleteTodosItem(itemIndex, index)\n          }, this.state.card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"btn__add-card fa fa-plus-circle\",\n        onClick: this.addCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ds/Desktop/react/todo-list/src/App.js"],"names":["React","Component","ReactSortable","AutoScroll","TodoCard","App","constructor","props","addCard","setTitle","newCard","title","id","Date","now","index","i","todoitems","setState","card","state","changeTitleOfCard","event","newState","target","value","deleteCard","splice","updateCards","addTodoItem","trim","newTodo","done","chosen","selected","copyTodoCard","push","console","log","updateTodosHandle","length","deleteTodosItem","itemIndex","render","overflow","auto","map","item"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport { ReactSortable } from 'react-sortablejs';\nimport { AutoScroll } from 'sortablejs';\nimport TodoCard from './todo/todo-card'\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      card:\n        [\n          {\n            title:'Read book',\n            id:Date.now(),\n            todoitems: [\n              {title:'first'},\n              {title:'second'},\n              {title:'thirthd'},\n            ]\n          },\n          {\n            title:'Products',\n            id:Date.now(),\n            todoitems: []\n          }\n        ]\n    };\n  }\n\n  //card functions\n\n  addCard = (setTitle) => {\n    const newCard = { title:'New card', id:Date.now(), index:this.i++, todoitems:[]}\n    this.setState({card : [...this.state.card,newCard]})\n  }\n\n  changeTitleOfCard = (index, event) => {\n    const newState = {...this.state};\n    newState.card[index].title= event.target.value;\n    this.setState(newState);\n  }\n\n  deleteCard = (index) => {\n    this.setState(this.state.card.splice(index,1))\n  }\n\n  updateCards = (card) => {\n    this.setState({card});\n  }\n\n  //Todo items functions\n\n  addTodoItem = (title, index) => {\n    // console.log(...this.state.card[index].todoitems);\n    if(title.trim()) {\n      const newTodo = {\n        title:title,\n        done:false,\n        id: Date.now(),\n        chosen:false,\n        selected: false\n      };\n\n      const card = this.copyTodoCard();\n      card[index].todoitems.push(newTodo);\n      this.setState({card});\n      console.log(this.state);\n    }\n  }\n\n  copyTodoCard = () => {\n   return this.state.card;\n  }\n\n  updateTodosHandle = (todoitems, index) => {\n    const card = this.copyTodoCard();\n    card[index].todoitems.splice(0, card[index].todoitems.length, ...todoitems);\n    this.setState(card => {\n      return card\n    });\n\n  }\n\n  deleteTodosItem = (itemIndex, index) => {\n    this.setState(this.state.card[index].todoitems.splice(itemIndex,1));\n  }\n\n  render() {\n    return (\n      <>\n        {\n          <ReactSortable list={this.state.card} setList={this.updateCards} className=\"col-12 row\" style={{overflow :auto}}>{  \n            this.state.card.map((item, index) => {\n              return (\n                  <TodoCard cardTitle={item.title} changeTitleOfCard={(event)=>this.changeTitleOfCard(index, event)} deleteCard = {()=>this.deleteCard(index)} key={this.state.card.id}\n                  addTodoItem={(title)=>this.addTodoItem(title,index)} todoitems = {this.state.card[index].todoitems} updateTodosHandle = {(todoitems) => this.updateTodosHandle(todoitems, index)} deleteTodosItem={(itemIndex)=>this.deleteTodosItem(itemIndex, index)}></TodoCard>\n              )\n            })\n          }</ReactSortable>\n        }\n        <i className=\"btn__add-card fa fa-plus-circle\" onClick={this.addCard}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}