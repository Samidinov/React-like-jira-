{"ast":null,"code":"var _jsxFileName = \"/home/ds/Desktop/react/todo-list/src/todo/todo-item.js\";\nimport React, { Component } from 'react';\nimport { ItemModal } from './itemModal';\nimport TodoActions from './todoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class TodoItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setAction = () => {\n      this.setState(({\n        action\n      }) => ({\n        action: !action\n      }));\n    };\n\n    this.toggleModal = () => {\n      this.setState(({\n        modalShow\n      }) => ({\n        modalShow: !modalShow\n      }));\n    };\n\n    this.isDone = () => {\n      this.setState(({\n        done\n      }) => ({\n        done: !done\n      }));\n    };\n\n    this.onChangeDescription = description => {\n      this.setState({\n        description\n      });\n    };\n\n    this.onChangeColor = (color = '') => {\n      this.setState({\n        color\n      });\n    };\n\n    this.isOpenActionItems = () => {\n      console.log('yess');\n    };\n\n    this.state = {\n      done: false,\n      modalShow: false,\n      color: '',\n      action: false,\n      isOpenActionItems: false\n    };\n  }\n\n  render() {\n    const {\n      modalShow,\n      done,\n      action,\n      color\n    } = this.state;\n    let style = done ? {\n      textDecorationLine: 'line-through'\n    } : {};\n    let {\n      title,\n      index,\n      deleteTodosItem\n    } = this.props;\n    const chevronClass = action ? 'fa-chevron-left' : 'fa-chevron-right';\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10\",\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          checked: done,\n          onChange: this.isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          variant: \"primary\",\n          style: {\n            cursor: \"all-scroll\"\n          },\n          onClick: this.toggleModal,\n          children: title.length > 20 ? title.substr(0, 20) + '...' : title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ItemModal, {\n          done: done,\n          show: modalShow,\n          handleClose: this.toggleModal,\n          title: title,\n          todoItemIndex: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `text-right fa ${chevronClass} col-1 pt-2 cursor-pointer`,\n        onClick: () => this.setAction(),\n        title: \"delete todo\",\n        style: {\n          position: 'relative',\n          fontSize: '.55em'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1 bg-red\",\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoActions, {\n        color: color,\n        action: action,\n        deleteTodosItem: deleteTodosItem,\n        onChangeColor: color => this.onChangeColor(color)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/ds/Desktop/react/todo-list/src/todo/todo-item.js"],"names":["React","Component","ItemModal","TodoActions","TodoItem","constructor","props","setAction","setState","action","toggleModal","modalShow","isDone","done","onChangeDescription","description","onChangeColor","color","isOpenActionItems","console","log","state","render","style","textDecorationLine","title","index","deleteTodosItem","chevronClass","cursor","length","substr","position","fontSize"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {ItemModal} from './itemModal'\nimport TodoActions from './todoActions';\n\nexport default class TodoItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            done: false,\n            modalShow: false,\n            color:'',\n            action:false,\n            isOpenActionItems:false\n        }\n    }\n    setAction = () => {\n        this.setState(({action}) => ({\n            action:!action\n        }))\n    }\n    toggleModal = () => {\n        this.setState(({modalShow}) => ({\n            modalShow:!modalShow\n        }))\n    }\n    isDone = () => {\n        this.setState(({done})=>({\n            done:!done\n        }))  \n    }\n    onChangeDescription = (description) => {\n        this.setState(({description}))\n    }\n    onChangeColor = (color='') => {\n        this.setState(({color}));\n    }\n\n    isOpenActionItems = () => {\n        \n        console.log('yess');\n    }\n\n    render() {\n\n        const {modalShow, done, action, color} = this.state;   \n        let style = done ? {textDecorationLine: 'line-through'} : {};\n        let {title, index, deleteTodosItem} = this.props;\n        const chevronClass = action ? 'fa-chevron-left' : 'fa-chevron-right';\n        return(\n            <>\n                \n                <div className=\"col-10\"  style ={style}>\n                    <input type=\"checkbox\" className=\"form-check-input\" checked={done} onChange={this.isDone}/>\n                    <small  \n                        variant=\"primary\"\n                        style={{cursor:\"all-scroll\"}}\n                        onClick={this.toggleModal}>\n                            {title.length > 20 ? title.substr(0, 20)+'...' : title}\n                    </small>\n                    <ItemModal\n                        done = {done}\n                        show={modalShow}\n                        handleClose={this.toggleModal}\n                        title={title}\n                        todoItemIndex={index}>\n                    </ItemModal>\n                </div>\n                <i className={`text-right fa ${chevronClass} col-1 pt-2 cursor-pointer`} onClick={()=>this.setAction()}\n                    title=\"delete todo\" style={{position:'relative', fontSize:'.55em'}}/>\n                <div className=\"col-1 bg-red\">a</div>\n                <TodoActions\n                 color={color}\n                 action={action}\n                 deleteTodosItem={deleteTodosItem}\n                 onChangeColor={(color) => this.onChangeColor(color)}\n                 />\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}