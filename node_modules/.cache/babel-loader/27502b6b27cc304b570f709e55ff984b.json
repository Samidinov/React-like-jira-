{"ast":null,"code":"var _jsxFileName = \"/home/ds/Desktop/react/todo-list/src/App.js\";\nimport React, { Component } from 'react';\nimport { ReactSortable } from 'react-sortablejs';\nimport TodoCard from './todo/todo-card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.addCard = setTitle => {\n      const newCard = {\n        title: 'New card',\n        id: Date.now(),\n        index: this.i++\n      };\n      this.setState({\n        card: [...this.state.card, newCard]\n      });\n    };\n\n    this.changeTitleOfCard = (index, event) => {\n      const newState = { ...this.state\n      };\n      newState.card[index].title = event.target.value;\n      this.setState(newState);\n    };\n\n    this.deleteCard = index => {\n      this.setState(this.state.card.splice(index, 1));\n    };\n\n    this.updateCards = card => {\n      this.setState({\n        card\n      });\n    };\n\n    this.updateTodosHandle = todoitems => {\n      this.setState({\n        todoitems\n      });\n    };\n\n    this.deleteTodosItem = index => {\n      this.setState(this.state.todoitems.splice(index, 1));\n    };\n\n    this.state = {\n      card: [{\n        title: 'Read book',\n        id: Date.now(),\n        todoitems: []\n      }, {\n        title: 'Products',\n        id: Date.now(),\n        todoitems: []\n      }]\n    };\n    this.addTodoItem = this.addTodoItem.bind(this);\n  } //card functions\n\n\n  //Todo items functions\n  addTodoItem(title, index) {\n    console.log(this.state.card[index].todoitems);\n\n    if (title.trim()) {\n      const newTodo = {\n        title: title,\n        done: false,\n        id: Date.now(),\n        chosen: false,\n        selected: false\n      };\n      this.setState([{ ...this.state.card[index].todoitems,\n        newTodo\n      }]);\n      console.log(this.state);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 alert-warning row\",\n      children: [this.state.card.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(TodoCard, {\n          cardTitle: item.title,\n          changeTitleOfCard: event => this.changeTitleOfCard(index, event),\n          deleteCard: () => this.deleteCard(index),\n          addTodoItem: title => this.addTodoItem(title, index),\n          todoitems: this.state.card[index].todoitems,\n          updateTodosHandle: this.updateTodosHandle,\n          deleteTodosItem: index => this.deleteTodosItem(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"btn__add-card fa fa-plus-circle\",\n        onClick: this.addCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ds/Desktop/react/todo-list/src/App.js"],"names":["React","Component","ReactSortable","TodoCard","App","constructor","addCard","setTitle","newCard","title","id","Date","now","index","i","setState","card","state","changeTitleOfCard","event","newState","target","value","deleteCard","splice","updateCards","updateTodosHandle","todoitems","deleteTodosItem","addTodoItem","bind","console","log","trim","newTodo","done","chosen","selected","render","map","item"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport { ReactSortable } from 'react-sortablejs';\nimport TodoCard from './todo/todo-card'\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n\n      card:\n        [\n          {\n            title:'Read book',\n            id:Date.now(),\n            todoitems: []\n          },\n          {\n            title:'Products',\n            id:Date.now(),\n            todoitems: []\n          }\n        ]\n    };\n\n    this.addTodoItem = this.addTodoItem.bind(this);\n  }\n\n  //card functions\n\n  addCard = (setTitle) => {\n    const newCard = { title:'New card', id:Date.now(), index:this.i++}\n    this.setState({card : [...this.state.card,newCard]})\n  }\n\n  changeTitleOfCard = (index, event) => {\n    const newState = {...this.state};\n    newState.card[index].title= event.target.value;\n    this.setState(newState);\n  }\n  deleteCard = (index) => {\n    this.setState(this.state.card.splice(index,1))\n  }\n  updateCards = (card) => {\n    this.setState({card});\n  }\n\n  //Todo items functions\n\n  addTodoItem(title, index) {\n    console.log(this.state.card[index].todoitems);\n    if(title.trim()) {\n      const newTodo = {\n        title:title,\n        done:false,\n        id: Date.now(),\n        chosen:false,\n        selected: false\n      };\n      this.setState([{...this.state.card[index].todoitems, newTodo}]);\n      console.log(this.state);\n    }\n  }\n\n  updateTodosHandle = (todoitems) => {\n    this.setState({todoitems});\n  }\n\n  deleteTodosItem = (index) => {\n    this.setState(this.state.todoitems.splice(index,1))\n  }\n\n  render() {\n    return (\n      <div className=\"col-12 alert-warning row\">\n{\n        this.state.card.map((item, index) => {\n          return (\n              <TodoCard cardTitle={item.title} changeTitleOfCard={(event)=>this.changeTitleOfCard(index, event)} deleteCard = {()=>this.deleteCard(index)}\n              addTodoItem={(title)=>this.addTodoItem(title,index)} todoitems = {this.state.card[index].todoitems} updateTodosHandle = {this.updateTodosHandle} deleteTodosItem={(index)=>this.deleteTodosItem(index)}></TodoCard>\n          )\n        })\n      }\n          <i className=\"btn__add-card fa fa-plus-circle\" onClick={this.addCard}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}